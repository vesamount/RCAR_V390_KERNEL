/*
 * ON Semiconductor AR0143 sensor camera wizard 1344x968@30/BGGR/BT601/RAW12
 *
 * Copyright (C) 2018-2019 Cogent Embedded, Inc.
 *
 * This program is free software; you can redistribute  it and/or modify it
 * under  the terms of  the GNU General  Public License as published by the
 * Free Software Foundation;  either version 2 of the  License, or (at your
 * option) any later version.
 */

#define AR0143_Sensor_Setup
#define AR0143_Recommended_Settings
#define AR0143_Sequencer_Update
#define AR0143_Parallel_Timing_Setup
#define AR0143_Readout_Mode_Configuration
#define AR0143_HDR_Readout_Mode_Configuration
#define AR0143_Full_Res_FOV
#define AR0143_3exp_30FPS_Timing_and_Exposure
#define AR0143_Parallel_HDR_12_bit_Output
#define AR0143_Trigger_Enable

/* 3-Exp HDR Mode Full Resolution Parallel Mode 30FPS PLL Enable, XCLK=27MHz */
static const struct ar0143_reg ar0143_regs_wizard_rev1[] = {
//{0x301A, 0x0001},	// reset (broken)
//{AR0143_DELAY, 100},

#ifdef AR0143_Sensor_Setup
{0x301A, 0x10D8},	// Stream off and setup parallel
{0x3070, 0x0001},
{0x3070, 0x0000},	//  1: Solid color test pattern,
			//  2: Full color bar test pattern,
			//  3: Fade to grey color bar test pattern,
			//256: Walking 1 test pattern (12 bit)
#ifdef AR0143_DISPLAY_PATTERN_FIXED
{0x3070, 0x0001},
#endif
{0x3072, 0x0fff},	// R
{0x3074, 0x0fff},	// G(GR row)
{0x3076, 0x0fff},	// B
{0x3078, 0x0fff},	// G(GB row)
#ifdef AR0143_DISPLAY_PATTERN_COLOR_BAR
{0x3070, 0x0002},
#endif
{AR0143_DELAY, 250},

#ifdef AR0143_Recommended_Settings
{0x3100, 0x4000},
{0x3102, 0x6060},
{0x3104, 0x6060},
{0x3106, 0x6060},
{0x3108, 0x0F9F},
{0x3280, 0x0FA0},
{0x3282, 0x0FA0},
{0x3284, 0x0FA0},
{0x3286, 0x0FA0},
{0x3288, 0x0FA0},
{0x328A, 0x0FA0},
{0x328C, 0x0FA0},
{0x328E, 0x0FA0},
{0x3290, 0x0FA0},
{0x3292, 0x0FA0},
{0x3294, 0x0FA0},
{0x3296, 0x0FA0},
{0x3298, 0x0FA0},
{0x329A, 0x0FA0},
{0x329C, 0x0FA0},
{0x329E, 0x0FA0},
{0x3110, 0x0011},
{0x3112, 0x7FE7},
{0x3114, 0x0000},
{0x3116, 0xC000},
{0x3120, 0x0BA0},
{0x3122, 0x0FA0},
{0x3124, 0x00B4},
{0x3126, 0x0030},
{0x3128, 0x6100},
{0x3506, 0x3333},
{0x3508, 0x3333},
{0x350A, 0x3333},
{0x350C, 0x035F},
{0x350E, 0xEF14},
{0x3086, 0x0600},
{0x3C00, 0xDD67},
{0x3092, 0x1C24},
{0x3096, 0x147E},
{0x3750, 0x147E},
{0x30B0, 0x0800},
{0x30FE, 0x0020},
{0x32D0, 0x3A02},
{0x32D6, 0x3C04},
{0x3C0C, 0x0516},
{0x3F96, 0xFFFE},
{0x3088, 0x6680},
{0x33E2, 0x0000},
{0x3366, 0x7777},
{0x3056, 0x0080},
{0x305C, 0x0080},
{0x3058, 0x0080},
{0x305A, 0x0080},
{0x306E, 0x9010},
{0x3044, 0x0400},
{0x30BA, 0x01E0},
{0x32EA, 0x3C0E},
{0x3362, 0x0000},
{0x3364, 0x005B},
{0x3370, 0x0131},
{0x3372, 0x700F},
{0x3386, 0x0000},
{0x3C04, 0x0E80},
{0x30B4, 0x0007},
{0x30B8, 0x0007},
{0x3F90, 0x0403},
{0x3F92, 0x0403},
{0x3502, 0x0808},
{0x3566, 0x1D28},
{0x3518, 0x1FFE},
{0x3520, 0x4688},
{0x3522, 0x8840},
{0x3524, 0x4046},
{0x3526, 0x0F00},
{0x3528, 0xDDDD},
{0x352C, 0x4646},
{0x352A, 0x089F},
{0x352E, 0x0011},
{0x3530, 0x4400},
{0x3536, 0xFF07},
{0x3538, 0xFFFF},
{0x353A, 0x9000},
{0x353C, 0x3F00},
{0x32EC, 0x72A1},
{0x3540, 0xC637},
{0x3542, 0x464B},
{0x3544, 0x4B50},
{0x3546, 0x545A},
{0x3548, 0x5500},
{0x354A, 0x007F},
{0x3556, 0x101F},
{0x3566, 0x3328},
{0x337A, 0x0B74},
{0x3372, 0x710F},
#endif /* AR0143_Recommended_Settings */

#ifdef AR0143_Sequencer_Update
{0x2512, 0x8000},
{0x2510, 0x0903},
{0x2510, 0x3350},
{0x2510, 0x2004},
{0x2510, 0x1420},
{0x2510, 0x1578},
{0x2510, 0x087B},
{0x2510, 0x24FF},
{0x2510, 0x24FF},
{0x2510, 0x24EA},
{0x2510, 0x2410},
{0x2510, 0x2224},
{0x2510, 0x1015},
{0x2510, 0x5813},
{0x2510, 0x0214},
{0x2510, 0x0024},
{0x2510, 0xFF24},
{0x2510, 0xFF24},
{0x2510, 0xEA23},
{0x2510, 0x2464},
{0x2510, 0x7A24},
{0x2510, 0x0405},
{0x2510, 0x2C40},
{0x2510, 0x0AFF},
{0x2510, 0x0A75},
{0x2510, 0x0A07},
{0x2510, 0x3851},
{0x2510, 0x1440},
{0x2510, 0x0004},
{0x2510, 0x0801},
{0x2510, 0x0408},
{0x2510, 0x1180},
{0x2510, 0x2652},
{0x2510, 0x0815},
{0x2510, 0x1813},
{0x2510, 0xC810},
{0x2510, 0x0210},
{0x2510, 0x1611},
{0x2510, 0x8111},
{0x2510, 0x8910},
{0x2510, 0x5612},
{0x2510, 0x1009},
{0x2510, 0x020D},
{0x2510, 0x0905},
{0x2510, 0x1588},
{0x2510, 0x1388},
{0x2510, 0x0938},
{0x2510, 0x1199},
{0x2510, 0x11D9},
{0x2510, 0x091E},
{0x2510, 0x1214},
{0x2510, 0x10D6},
{0x2510, 0x0901},
{0x2510, 0x1210},
{0x2510, 0x1212},
{0x2510, 0x1210},
{0x2510, 0x11DD},
{0x2510, 0x11D9},
{0x2510, 0x0901},
{0x2510, 0x1441},
{0x2510, 0x0904},
{0x2510, 0x1056},
{0x2510, 0x0811},
{0x2510, 0xDB09},
{0x2510, 0x0311},
{0x2510, 0xFB11},
{0x2510, 0xBB12},
{0x2510, 0x1A12},
{0x2510, 0x1008},
{0x2510, 0x1250},
{0x2510, 0x1076},
{0x2510, 0x10E6},
{0x2510, 0x1461},
{0x2510, 0x0906},
{0x2510, 0x1240},
{0x2510, 0x1260},
{0x2510, 0x091C},
{0x2510, 0x1460},
{0x2510, 0x090C},
{0x2510, 0x0B09},
{0x2510, 0x0515},
{0x2510, 0xC813},
{0x2510, 0xC808},
{0x2510, 0x1066},
{0x2510, 0x090B},
{0x2510, 0x1588},
{0x2510, 0x1388},
{0x2510, 0x0913},
{0x2510, 0x0C14},
{0x2510, 0x4009},
{0x2510, 0x0310},
{0x2510, 0xE611},
{0x2510, 0xFB12},
{0x2510, 0x6212},
{0x2510, 0x6011},
{0x2510, 0xFF11},
{0x2510, 0xFB14},
{0x2510, 0x4109},
{0x2510, 0x0210},
{0x2510, 0x6609},
{0x2510, 0x1211},
{0x2510, 0xBB12},
{0x2510, 0x6312},
{0x2510, 0x6014},
{0x2510, 0x0015},
{0x2510, 0x1811},
{0x2510, 0xB812},
{0x2510, 0xA012},
{0x2510, 0x0010},
{0x2510, 0x2610},
{0x2510, 0x0013},
{0x2510, 0x0011},
{0x2510, 0x8030},
{0x2510, 0x5342},
{0x2510, 0x1100},
{0x2510, 0x1002},
{0x2510, 0x1016},
{0x2510, 0x1101},
{0x2510, 0x1109},
{0x2510, 0x1056},
{0x2510, 0x1210},
{0x2510, 0x0D09},
{0x2510, 0x0614},
{0x2510, 0x4109},
{0x2510, 0x0714},
{0x2510, 0x4009},
{0x2510, 0x0115},
{0x2510, 0xCC13},
{0x2510, 0xCC09},
{0x2510, 0x1611},
{0x2510, 0x4909},
{0x2510, 0x0815},
{0x2510, 0x8813},
{0x2510, 0x8809},
{0x2510, 0x1B11},
{0x2510, 0x5909},
{0x2510, 0x0B12},
{0x2510, 0x1409},
{0x2510, 0x0112},
{0x2510, 0x1010},
{0x2510, 0xD612},
{0x2510, 0x1212},
{0x2510, 0x1011},
{0x2510, 0x5D11},
{0x2510, 0x5910},
{0x2510, 0x5609},
{0x2510, 0x0311},
{0x2510, 0x5B08},
{0x2510, 0x1441},
{0x2510, 0x0901},
{0x2510, 0x1440},
{0x2510, 0x090C},
{0x2510, 0x117B},
{0x2510, 0x113B},
{0x2510, 0x121A},
{0x2510, 0x1210},
{0x2510, 0x0901},
{0x2510, 0x1250},
{0x2510, 0x10F6},
{0x2510, 0x10E6},
{0x2510, 0x1460},
{0x2510, 0x0901},
{0x2510, 0x15AB},
{0x2510, 0x13AB},
{0x2510, 0x1240},
{0x2510, 0x1260},
{0x2510, 0x0924},
{0x2510, 0x1588},
{0x2510, 0x0902},
{0x2510, 0x1066},
{0x2510, 0x0B08},
{0x2510, 0x1388},
{0x2510, 0x0907},
{0x2510, 0x158D},
{0x2510, 0x138D},
{0x2510, 0x090D},
{0x2510, 0x1588},
{0x2510, 0x1388},
{0x2510, 0x0909},
{0x2510, 0x0C09},
{0x2510, 0x0214},
{0x2510, 0x4009},
{0x2510, 0x0710},
{0x2510, 0xE612},
{0x2510, 0x6212},
{0x2510, 0x6011},
{0x2510, 0x7F11},
{0x2510, 0x7B10},
{0x2510, 0x6609},
{0x2510, 0x0614},
{0x2510, 0x4109},
{0x2510, 0x0114},
{0x2510, 0x4009},
{0x2510, 0x0D11},
{0x2510, 0x3B12},
{0x2510, 0x6312},
{0x2510, 0x6014},
{0x2510, 0x0015},
{0x2510, 0x5A11},
{0x2510, 0x3812},
{0x2510, 0xA012},
{0x2510, 0x0010},
{0x2510, 0x2610},
{0x2510, 0x0013},
{0x2510, 0x4211},
{0x2510, 0x0043},
{0x2510, 0x7A06},
{0x2510, 0x0508},
{0x2510, 0x0741},
{0x2510, 0x3750},
{0x2510, 0x2C2C},
{0x2510, 0xFE11},
{0x2510, 0xFE05},
{0x2510, 0x2C2C},

{0x1008, 0x02A1},
{0x100C, 0x042D},
{0x100E, 0x05B9},
{0x1010, 0x0115},

{0x3230, 0x023F},
{0x3232, 0x03CB},
{0x3234, 0x0557},
{0x3236, 0x00B3},
{0x32E6, 0x009A},
#endif /* AR0143_Sequencer_Update */

{0x350C, 0x035F},
{0x32D0, 0x3A02},
{0x32D2, 0x3508},
{0x32D4, 0x3702},
{0x32D6, 0x3C04},
{0x32DC, 0x370A},
#endif /* AR0143_Sensor_Setup */

#ifdef AR0143_Parallel_Timing_Setup
/* PCLK=27MHz/5 *93 /1/10 = 50.22MHz - MAXIM serializers */
{0x302A, 10}, // VT_PIX_CLK_DIV
{0x302C, 1}, // VT_SYS_CLK_DIV
{0x302E, 5}, // PRE_PLL_CLK_DIV
{0x3030, 93}, // PLL_MULTIPLIER
{0x3036, 10}, // OP_WORD_CLK_DIV
{0x3038, 1}, // OP_SYS_CLK_DIV
#endif /* AR0143_Parallel_Timing_Setup */

#ifdef AR0143_Readout_Mode_Configuration
{0x30A2, 0x0001}, // X_ODD_INC_
{0x30A6, 0x0001}, // Y_ODD_INC_
{0x3040, 0x0000}, // READ_MODE
{0x3082, 0x0008}, // OPERATION_MODE_CTRL: 3exp
{0x30BA, 0x01E2}, // DIGITAL_CTRL: 3exp max
{0x3044, 0x0400}, // DARK_CONTROL
{0x3064, 0x1802}, // SMIA_TEST: disable emb data and stats
{0x33E0, 0x0880}, // TEST_ASIL_ROWS
{0x3180, 0x0080}, // RESERVED_MFR_3180
{0x33E4, 0x0080}, // RESERVED_MFR_33E4
#endif /* AR0143_Readout_Mode_Configuration */

#ifdef AR0143_HDR_Readout_Mode_Configuration
#ifdef AR0143_EMBEDDED_LINE
{0x3064, 0x1982}, // SMIA_TEST: enable emb data and stats
#endif
#endif /* AR0143_HDR_Readout_Mode_Configuration */

#ifdef AR0143_Full_Res_FOV
{0x31B0, 0x0006}, // FRAME_PREAMBLE
{0x31B2, 0x0045}, // LINE_PREAMBLE
{0x3004, AR0143_X_START}, // X_ADDR_START_
{0x3008, AR0143_X_END}, // X_ADDR_END_
{0x3002, AR0143_Y_START}, // Y_ADDR_START_
{0x3006, AR0143_Y_END}, // Y_ADDR_END_
{0x3400, 0x10},
{0x3402, 0x0000 | AR0143_MAX_WIDTH}, // X_OUTPUT_CONTROL
{0x3404, 0x0000 | AR0143_MAX_HEIGHT}, // Y_OUTPUT_CONTROL
#endif /* AR0143_Full_Res_FOV */

#ifdef AR0143_3exp_30FPS_Timing_and_Exposure
{0x3082, 0x0008}, // OPERATION_MODE_CTRL: 3exp
{0x30BA, 0x01E2}, // DIGITAL_CTRL: 3exp max
/* Row and Pixel Timing */
{0x300C, AR0143_SENSOR_WIDTH + 144}, // LINE_LENGTH_PCK_
{0x300A, AR0143_SENSOR_HEIGHT + 157}, // FRAME_LENGTH_LINES_
{0x3042, 0}, // EXTRA_DELAY
/* Exposure Settings */
{0x3238, 0x0222}, // EXPOSURE_RATIO
{0x3012, 0x0300}, // COARSE_INTEGRATION_TIME_

{0x3014, AR0143_SENSOR_WIDTH + 144 + 154}, // FINE_INTEGRATION_TIME_ = LINE_LENGTH_PCK_ + 154
{0x321E, AR0143_SENSOR_WIDTH + 144 + 154}, // FINE_INTEGRATION_TIME2
{0x3222, AR0143_SENSOR_WIDTH + 144 + 154}, // FINE_INTEGRATION_TIME3

{0x30B0, 0x0800}, // DIGITAL_TEST
{0x32EA, 0x3C0E},
{0x32EC, 0x72A1},
{0x3C06, 0x083C},
{0x3C08, 0x0100},
#endif /* AR0143_3exp_30FPS_Timing_and_Exposure */

#ifdef AR0143_Parallel_HDR_12_bit_Output
{0x31D0, 0x0001}, // COMPANDING
{0x31AE, 0x0001}, // SERIAL_FORMAT
{0x31AC, 0x140C}, // DATA_FORMAT_BITS: ADC20, RAW12
{0x301A, 0x11d8}, // RESET_REGISTER
#endif /* AR0143_Parallel_HDR_12_bit_Output */

#ifdef AR0143_Trigger_Enable
{0x340A, 0x0070}, // GPIO_CONTROL1: GPIO3 is trigger
{0x340C, 0x0080}, // GPIO_CONTROL2: GPIO3 is trigger
{0x30CE, 0x0120}, // TRIGGER_MODE
//{0x30DC, 0x0120}, // TRIGGER_DELAY
#endif
};
